---
layout: post
title:  "연산자와 표현식: JavaScript 연산자로 데이터 조작하기"
date:   2024-03-03 23:01:00 +0900
author: padawanjoy
image:  '/images/posts/2024-03-03-operators-and-expressions-manipulating-data-with-javascript-operators/01.webp'
tags:   [javascript, js-dev-course, operator, arithmetic-operators, comparison-operators, logical-operators]
tags_color: '#db9e00'
featured: true
---
이번 포스트에서는 JavaScript에서 데이터를 조작하는 데 사용되는 연산자와 표현식에 대해 알아보겠습니다. 연산자와 표현식을 이해하는 것은 데이터를 처리하고 프로그래밍에서 논리를 구현하는 데 필수적입니다.

## 목차
1. [연산자 기초](#연산자-기초)
2. [산술 연산자](#산술-연산자)
3. [비교 연산자](#비교-연산자)
4. [논리 연산자](#논리-연산자)
5. [실습: 연산자 사용 예제](#실습-연산자-사용-예제)
6. [결론 및 다음 포스트 미리보기](#결론-및-다음-포스트-미리보기)

## 연산자 기초
연산자는 데이터를 조작하고 결과를 생성하는 데 사용되는 기호입니다. 예를 들어, **`+`** 연산자는 두 숫자를 더합니다. 연산자는 피연산자(연산의 대상)에 작용하며, 연산자와 피연산자의 조합이 '표현식'을 형성합니다.

## 산술 연산자
산술 연산자는 수학적 연산을 수행합니다. 가장 일반적인 산술 연산자에는 덧셈(**`+`**), 뺄셈(**`-`**), 곱셈(**`*`**), 나눗셈(**`/`**)이 포함됩니다. 예를 들어, 표현식 **`let result = 10 + 5;`**는 10과 5를 더하고 그 값을 **`result`** 변수에 할당합니다.

## 비교 연산자
비교 연산자는 두 값을 비교하고 boolean 값인 true 또는 false를 반환합니다. 예를 들어, **`==`** 연산자는 두 값이 같은지 확인하는 반면, **`>`** 연산자는 왼쪽 값이 오른쪽 값보다 큰지 확인합니다.

## 논리 연산자
논리 연산자는 boolean 값(true 또는 false)을 조작합니다. 가장 일반적인 논리 연산자는 AND(**`&&`**), OR(**`||`**), NOT(**`!`**)입니다. 예를 들어, 표현식 **`let isAdult = age > 18 && isMember;`**는 사용자가 18세 이상이고 회원일 경우에만 true를 반환합니다.

## 실습: 연산자 사용 예제
연산자를 사용한 간단한 예제로 실습해 봅시다. 사용자의 나이에 따라 "성인" 또는 "미성년자"를 출력하는 코드를 작성하는 방법은 다음과 같습니다:

```javascript
let age = 20;
let status = (age >= 18) ? "성인" : "미성년자";
console.log(status);
```

이 코드는 삼항 연산자(**`? :`**)를 사용하여 **`age`** 값에 따라 **`status`** 변수에 다른 문자열을 할당합니다.

## 결론 및 다음 포스트 미리보기
이 포스트에서는 JavaScript의 기본 연산자와 이러한 연산자를 사용하여 표현식을 만드는 방법에 대해 배웠습니다. 다음 포스트에서는 '조건문 이해하기: JavaScript에서 다양한 조건 처리하기'를 다룰 예정입니다. 기대해 주세요!